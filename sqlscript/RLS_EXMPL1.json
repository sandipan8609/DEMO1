{
	"name": "RLS_EXMPL1",
	"properties": {
		"content": {
			"query": "CREATE USER Manager WITHOUT LOGIN;  \nCREATE USER SalesRep1 WITHOUT LOGIN;  \nCREATE USER SalesRep2 WITHOUT LOGIN;\nGO\n\nCREATE SCHEMA Sales\nGO\nCREATE TABLE Sales.Orders \n    (  \n    OrderID int,  \n    SalesRep nvarchar(50),  \n    Product nvarchar(50),  \n    Quantity smallint  \n    );\n\n\n    INSERT INTO Sales.Orders  VALUES (1, 'SalesRep1', 'Valve', 5);\nINSERT INTO Sales.Orders  VALUES (2, 'SalesRep1', 'Wheel', 2);\nINSERT INTO Sales.Orders  VALUES (3, 'SalesRep1', 'Valve', 4);\nINSERT INTO Sales.Orders  VALUES (4, 'SalesRep2', 'Bracket', 2);\nINSERT INTO Sales.Orders  VALUES (5, 'SalesRep2', 'Wheel', 5);\nINSERT INTO Sales.Orders  VALUES (6, 'SalesRep2', 'Seat', 5);\n-- View the 6 rows in the table  \n\n\n\nGRANT SELECT ON Sales.Orders TO Manager;  \nGRANT SELECT ON Sales.Orders TO SalesRep1;  \nGRANT SELECT ON Sales.Orders TO SalesRep2; \nGO\n\n\nCREATE SCHEMA Security;  \nGO  \n  \nCREATE FUNCTION Security.tvf_securitypredicate(@SalesRep AS nvarchar(50))  \n    RETURNS TABLE  \nWITH SCHEMABINDING  \nAS  \n    RETURN SELECT 1 AS tvf_securitypredicate_result\nWHERE @SalesRep = USER_NAME() OR USER_NAME() = 'Manager';  \nGO\n\n\nCREATE SECURITY POLICY SalesFilter  \nADD FILTER PREDICATE Security.tvf_securitypredicate(SalesRep)\nON Sales.Orders\nWITH (STATE = ON);  \nGO\n\nGRANT SELECT ON Security.tvf_securitypredicate TO Manager;  \nGRANT SELECT ON Security.tvf_securitypredicate TO SalesRep1;  \nGRANT SELECT ON Security.tvf_securitypredicate TO SalesRep2;\n\n\nEXECUTE AS USER = 'SalesRep1';  \nSELECT * FROM Sales.Orders;\nREVERT;  \n  \nEXECUTE AS USER = 'SalesRep2';  \nSELECT * FROM Sales.Orders;\nREVERT;  \n  \nEXECUTE AS USER = 'Manager';  \nSELECT * FROM Sales.Orders;\nREVERT;\n\n\nCREATE SCHEMA Data;\nGO\n\n-- table with masked columns\nCREATE TABLE Data.Membership(\n    MemberID        int IDENTITY(1,1) NOT NULL PRIMARY KEY CLUSTERED,\n    FirstName        varchar(100) MASKED WITH (FUNCTION = 'partial(1, \"xxxxx\", 1)') NULL,\n    LastName        varchar(100) NOT NULL,\n    Phone            varchar(12) MASKED WITH (FUNCTION = 'default()') NULL,\n    Email            varchar(100) MASKED WITH (FUNCTION = 'email()') NOT NULL,\n    DiscountCode    smallint MASKED WITH (FUNCTION = 'random(1, 100)') NULL\n    );\n\n-- inserting sample data\nINSERT INTO Data.Membership (FirstName, LastName, Phone, Email, DiscountCode)\nVALUES   \n('Roberto', 'Tamburello', '555.123.4567', 'RTamburello@contoso.com', 10),  \n('Janice', 'Galvin', '555.123.4568', 'JGalvin@contoso.com.co', 5),  \n('Shakti', 'Menon', '555.123.4570', 'SMenon@contoso.net', 50),  \n('Zheng', 'Mu', '555.123.4569', 'ZMu@contoso.net', 40);  ",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "SQLPool01",
				"poolName": "SQLPool01"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}